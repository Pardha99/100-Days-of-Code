Day: 43 / 100
#100daysofcode

ProblemName: Find First and Last Position of Element in Sorted Array
ProblemLink:https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/


Appraoch: Binary-Search

With the help of @takeUforward able to solve
YT: https://youtu.be/hjR1IYVx9lY

Solution:
class Solution {
public:
    int upperbound(int x, int n,vector<int>& num){

           int low = 0;
           int high = n-1;
           int ans = n;

           while(low<=high){
               int mid = (high+low)/2;
               if(num[mid] > x){
                   ans = mid;
                high = mid-1;
               }else{
                   low = mid+1;
               }
           }
           return ans;
       }
    int lowerbound(int x , int n,vector<int> num){
           int low = 0;
           int high = n-1;
           int ans = n;
           while(low<=high){
               int mid  = (low+high)/2;

               if(num[mid]>= x){
                   ans = mid;
                   high = mid-1;
               }else{
                   low = mid +1;
               }
           }
           return ans;
       }
    vector<int> searchRange(vector<int>& nums, int target) {
        

        int n = nums.size();
       
       

       int lb = lowerbound(target,n,nums);
       if(lb == n || nums[lb] != target) return{-1,-1};
       else return {lb,upperbound(target,n,nums)-1};

    }
};


TimeComplexity: O(log(N))
SpaceComplexity: O(1)
