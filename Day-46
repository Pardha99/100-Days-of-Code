Day: 46 / 100
#100daysofcode

Problem: Search in Rotated Sorted Array II
Link: https://leetcode.com/problems/search-in-rotated-sorted-array-ii/

Appraoch: Binary-Search

@takeUforward
https://youtu.be/w2G2W8l__pc

Solution:
class Solution {
public:
    bool search(vector<int>& nums, int target) {
     
        int l = 0;
        int r = nums.size()-1;

        int ans = -1;
        while(l<=r)
        {

            int mid = (l+r)/2;

            if(nums[mid]==target) {
                ans = 1;
                break;
            }
            if(nums[mid]==nums[l] && nums[mid]==nums[r]){
                l++;
                r--;
            }
            else if(nums[l]<=nums[mid])
            {

                if(target>=nums[l] && target<nums[mid]){
                        r = mid-1;
                }else{
                    l = mid+1;
                }
                }
                else{
                    if(target>nums[mid] && target<=nums[r]){
                        l = mid+1;
                    }else{
                        r = mid-1;
                    }
            }
        }
        return ans==1;    
        }
};

TimeComplexity: O(log(N))
SpaceComplexity: O(1)



#100daysofcodechallenge #100daysofcode #100daysofcoding #100daysoflearning #100daysofdsa #codinglife #codingjourney #codingskills
#leetcode #codingcommunity #striversa2zdsa #striver
